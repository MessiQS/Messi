{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","config","setState","text","buttonText","type","position","supportedOrientations","duration","setTimeout","autoHide","console","warn","margin","OS","flex","justifyContent","toastInstance","_root","showToast","propTypes","style","PropTypes","object","StyledToastContainer"],"mappings":";;AAEA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;AAEMA,c;AACJ,wBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH,CAAb,CAFiB;;AAKlB,C;;;;;AAKqB,oBAAVC,OAAU,MAAVA,MAAU;AACpB,KAAKC,QAAL,CAAc;AACZF,aAAc,IADF;AAEZG,KAAMF,OAAOE,IAFD;AAGZC,WAAYH,OAAOG,UAHP;AAIZC,KAAMJ,OAAOI,IAJD;AAKZC,SAAUL,OAAOK,QALL;AAMZC,sBAAuBN,OAAOM,qBANlB,CAAd;;AAQA,GAAIN,OAAOO,QAAP,CAAkB,CAAtB,CAAyB;AACvBC,WAAW,UAAM;AACf,OAAKP,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CAJD,CAIGC,OAAOO,QAJV;AAKD;AACF,C;AACmB;AAClB,GAAI,CAAC,KAAKV,KAAL,CAAWY,QAAZ,EAAwB,KAAKZ,KAAL,CAAWU,QAAvC,CAAiD;AAC/CG,QAAQC,IAAR;AACD;AACF,C;AACQ;AACP;AACE;AACE,sBAAuB,KAAKb,KAAL,CAAWQ,qBAAX,EAAoC,IAD7D;AAEE,cAAe,KAAKR,KAAL,CAAWO,QAAX,EAAuB,QAAvB,CAAkC,OAAlC,CAA4C,MAF7D;AAGE,YAAa,IAHf;AAIE,QAAS,KAAKP,KAAL,CAAWC,YAJtB;AAKE,eAAgB,yBAAM;AACpB,OAAKE,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CATH;;AAWE;AACE,MAAO;AACLa,OAAQ,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,CADhC;AAELC,KAAM,CAFD;AAGLC,eAAgB,KAAKjB,KAAL,CAAWO,QAAX,GAAwB,KAAxB;AACZ,YADY;AAEZ,KAAKP,KAAL,CAAWO,QAAX,GAAwB,QAAxB;AACI,UADJ;AAEI,KAAKP,KAAL,CAAWO,QAAX,GAAwB,QAAxB,CAAmC,QAAnC,CAA8C,YAPjD,CADT;;;AAWE;AACE,OAAQ,KAAKP,KAAL,CAAWM,IAAX,EAAmB,QAAnB,CAA8B,IAA9B,CAAqC,KAD/C;AAEE,QAAS,KAAKN,KAAL,CAAWM,IAAX,EAAmB,SAAnB,CAA+B,IAA/B,CAAsC,KAFjD;AAGE,QAAS,KAAKN,KAAL,CAAWM,IAAX,EAAmB,SAAnB,CAA+B,IAA/B,CAAsC,KAHjD;;AAKE,0FAAO,KAAKN,KAAL,CAAWI,IAAlB,CALF;AAMG,KAAKJ,KAAL,CAAWK,UAAX;AACC;AACE,QAAS,kBAAM;AACb,OAAKF,QAAL,CAAc;AACZF,aAAc,KADF,CAAd;;AAGD,CALH;;AAOE,0FAAO,KAAKD,KAAL,CAAWK,UAAlB,CAPF,CAPJ,CAXF,CAXF,CADF;;;;;;;AA4CD,C,0CAtE0B,IAAVH,OAAU,oCACzB,KAAKgB,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAAElB,aAAF,CAAnC,EACD,C;;;AAuEHJ,eAAeuB,SAAf;;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB;;;AAKA,GAAMC,sBAAuB;AAC3B,2BAD2B;AAE3B,EAF2B;;AAI3B3B,cAJ2B,CAA7B,C;;AAMiCA,c,CAAxB2B,oB","file":"ToastContainer.js","sourcesContent":["/* @flow */\n\nimport React, { Component } from \"react\";\nimport { View, Modal, Platform, ViewPropTypes } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Toast } from \"./Toast\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false\n    };\n  }\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: config.buttonText,\n      type: config.type,\n      position: config.position,\n      supportedOrientations: config.supportedOrientations\n    });\n    if (config.duration > 0) {\n      setTimeout(() => {\n        this.setState({\n          modalVisible: false\n        });\n      }, config.duration);\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        supportedOrientations={this.state.supportedOrientations || null}\n        animationType={this.state.position == \"bottom\" ? \"slide\" : \"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => {\n          this.setState({\n            modalVisible: false\n          });\n        }}\n      >\n        <View\n          style={{\n            margin: Platform.OS === \"ios\" ? 20 : 0,\n            flex: 1,\n            justifyContent: this.state.position === \"top\"\n              ? \"flex-start\"\n              : this.state.position === \"bottom\"\n                  ? \"flex-end\"\n                  : this.state.position === \"center\" ? \"center\" : \"flex-start\"\n          }}\n        >\n          <Toast\n            danger={this.state.type == \"danger\" ? true : false}\n            success={this.state.type == \"success\" ? true : false}\n            warning={this.state.type == \"warning\" ? true : false}\n          >\n            <Text>{this.state.text}</Text>\n            {this.state.buttonText &&\n              <Button\n                onPress={() => {\n                  this.setState({\n                    modalVisible: false\n                  });\n                }}\n              >\n                <Text>{this.state.buttonText}</Text>\n              </Button>}\n\n          </Toast>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object\n};\n\nconst StyledToastContainer = connectStyle(\n  \"NativeBase.ToastContainer\",\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]}