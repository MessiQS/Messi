{"version":3,"sources":["../../../src/basic/Actionsheet.js"],"names":["ActionSheetContainer","props","state","modalVisible","items","config","callback","OS","options","filtered","map","item","text","showActionSheetWithOptions","setState","title","message","destructiveButtonIndex","cancelButtonIndex","autoHide","duration","console","warn","backgroundColor","flex","justifyContent","height","length","padding","elevation","color","marginHorizontal","marginTop","data","i","id","borderColor","icon","actionsheetInstance","_root","showActionSheet","propTypes","style","PropTypes","object","StyledActionSheetContainer"],"mappings":"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","file":"Actionsheet.js","sourcesContent":["/* @flow */\n\nimport React, { Component } from \"react\";\nimport {\n  View,\n  Modal,\n  Platform,\n  ActionSheetIOS,\n  TouchableOpacity,\n  ViewPropTypes\n} from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Icon } from \"./Icon\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { List } from \"./List\";\nimport { ListItem } from \"./ListItem\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass ActionSheetContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      items: []\n    };\n  }\n  static actionsheetInstance;\n  static show(config, callback) {\n    this.actionsheetInstance._root.showActionSheet(config, callback);\n  }\n  showActionSheet(config, callback) {\n    if (Platform.OS === \"ios\") {\n      if (typeof config.options[0] == \"object\") {\n        let options = config.options;\n        let filtered = options.map(item => {\n          return item.text;\n        });\n        config.options = filtered;\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      } else {\n        ActionSheetIOS.showActionSheetWithOptions(config, callback);\n      }\n    } else {\n      this.setState({\n        items: config.options,\n        title: config.title,\n        message: config.message,\n        destructiveButtonIndex: config.destructiveButtonIndex,\n        cancelButtonIndex: config.cancelButtonIndex,\n        modalVisible: true,\n        callback: callback\n      });\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        animationType={\"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => this.setState({ modalVisible: false })}\n      >\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={() => this.setState({ modalVisible: false })}\n          style={{\n            backgroundColor: \"rgba(0,0,0,0.4)\",\n            flex: 1,\n            justifyContent: \"flex-end\"\n          }}\n        >\n          <TouchableOpacity\n            activeOpacity={1}\n            style={{\n              backgroundColor: \"#fff\",\n              height: this.state.length * 80,\n              padding: 15,\n              elevation: 4\n            }}\n          >\n            <Text style={{ color: \"#757575\" }}>{this.state.title}</Text>\n            <List\n              style={{ marginHorizontal: -15, marginTop: 15 }}\n              dataArray={this.state.items}\n              renderRow={(data, i, id) => {\n                return typeof this.state.items[0] === \"string\"\n                  ? <ListItem\n                      onPress={() => {\n                        this.state.callback(id);\n                        this.setState({ modalVisible: false });\n                      }}\n                      style={{ borderColor: \"transparent\" }}\n                    >\n                      <Text>{data}</Text>\n                    </ListItem>\n                  : <ListItem\n                      onPress={() => {\n                        this.state.callback(id);\n                        this.setState({ modalVisible: false });\n                      }}\n                      style={{ borderColor: \"transparent\" }}\n                      icon\n                    >\n                      <Left>\n                        <Icon name={data.icon} />\n                      </Left>\n                      <Body style={{ borderColor: \"transparent\" }}>\n                        <Text>{data.text}</Text>\n                      </Body>\n                      <Right />\n                    </ListItem>;\n              }}\n            />\n          </TouchableOpacity>\n        </TouchableOpacity>\n      </Modal>\n    );\n  }\n}\n\nActionSheetContainer.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object\n};\n\nconst StyledActionSheetContainer = connectStyle(\n  \"NativeBase.ActionSheetContainer\",\n  {},\n  mapPropsToStyleNames\n)(ActionSheetContainer);\n\nexport { StyledActionSheetContainer as ActionSheetContainer };\n"]}