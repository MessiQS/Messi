{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","variables","checkStyle","borderColor","props","color","checkboxBgColor","backgroundColor","checked","defaultProps","style","getInitialStyle","context","theme","platformStyle","platform","_root","c","prepareRootProps","checkboxTickColor","fontSize","CheckboxFontSize","lineHeight","CheckboxIconSize","contextTypes","PropTypes","object","propTypes","bool","StyledCheckBox"],"mappings":"21BAAA,4B;AACA;AACA,4D;AACA;AACA,mE;AACA,qD;AACA,8B;AACA,mD;;AAEMA,Q;;;;;AAKYC,S,CAAW;AACzB,MAAO;AACLC,WAAY;AACVC,YAAa,KAAKC,KAAL,CAAWC,KAAX;AACT,KAAKD,KAAL,CAAWC,KADF;AAETJ,UAAUK,eAHJ;AAIVC,gBAAiB,KAAKH,KAAL,CAAWI,OAAX,GAAuB,IAAvB;AACb,KAAKJ,KAAL,CAAWC,KAAX,CAAmB,KAAKD,KAAL,CAAWC,KAA9B,CAAsCJ,UAAUK,eADnC;AAEb,aANM,CADP,CAAP;;;AAUD,C;;AAEgBL,S,CAAW;AAC1B,GAAMQ,cAAe;AACnBC,MAAO,KAAKC,eAAL,CAAqBV,SAArB,EAAgCC,UADpB,CAArB;;;AAIA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBK,YAAzB,CAAP;AACD,C;AACQ;AACP,GAAMR,WAAY,KAAKW,OAAL,CAAaC,KAAb;AACd,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDZ,SADnC,mBAAlB;;AAGA,GAAMa,eAAgBb,UAAUa,aAAhC;AACA,GAAMC,UAAWd,UAAUc,QAA3B;AACA;AACE;AACE,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EADP;AAEM,KAAKC,gBAAL,CAAsBjB,SAAtB,CAFN;;AAIE;AACE,MAAO;AACLI,MAAOJ,UAAUkB,iBADZ;AAELC,SAAUnB,UAAUoB,gBAFf;AAGLC,WAAYrB,UAAUsB,gBAHjB,CADT;;AAME;AACER,WAAa,KAAb,EAAsBD,gBAAkB,UAAxC;AACI,uBADJ;AAEI,cATR,iDAJF,CADF;;;;;AAmBD,C,wCAlDGd,Q,CACGwB,Y,CAAe,CACpBX,MAAO,gBAAMY,SAAN,CAAgBC,MADH,C;;;AAoDxB1B,SAAS2B,SAAT;AACK,8BAAiBA,SADtB;AAEEjB,MAAO,gBAAMe,SAAN,CAAgBC,MAFzB;AAGElB,QAAS,gBAAMiB,SAAN,CAAgBG,IAH3B;;;AAMA,GAAMC,gBAAiB;AACrB,qBADqB;AAErB,EAFqB;;AAIrB7B,QAJqB,CAAvB,C;;AAM2BA,Q,CAAlB6B,c","file":"Checkbox.js","sourcesContent":["import React, { Component } from \"react\";\nimport { TouchableOpacity, Platform } from \"react-native\";\nimport IconNB from \"react-native-vector-icons/Ionicons\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport _ from \"lodash\";\nimport computeProps from \"../Utils/computeProps\";\n\nclass CheckBox extends Component {\n  static contextTypes = {\n    theme: React.PropTypes.object\n  };\n\n  getInitialStyle(variables) {\n    return {\n      checkStyle: {\n        borderColor: this.props.color\n          ? this.props.color\n          : variables.checkboxBgColor,\n        backgroundColor: this.props.checked === true\n          ? this.props.color ? this.props.color : variables.checkboxBgColor\n          : \"transparent\"\n      }\n    };\n  }\n\n  prepareRootProps(variables) {\n    const defaultProps = {\n      style: this.getInitialStyle(variables).checkStyle\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    return (\n      <TouchableOpacity\n        ref={c => (this._root = c)}\n        {...this.prepareRootProps(variables)}\n      >\n        <IconNB\n          style={{\n            color: variables.checkboxTickColor,\n            fontSize: variables.CheckboxFontSize,\n            lineHeight: variables.CheckboxIconSize\n          }}\n          name={\n            platform === \"ios\" && platformStyle !== \"material\"\n              ? \"ios-checkmark-outline\"\n              : \"md-checkmark\"\n          }\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: React.PropTypes.object,\n  checked: React.PropTypes.bool\n};\n\nconst StyledCheckBox = connectStyle(\n  \"NativeBase.CheckBox\",\n  {},\n  mapPropsToStyleNames\n)(CheckBox);\n\nexport { StyledCheckBox as CheckBox };\n"]}